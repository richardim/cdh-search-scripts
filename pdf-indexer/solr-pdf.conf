# Adapted from Marty Luries Sample
# sample code not supported
# source from  example by Mark Brooks
# adapted to be fully scripted
# long instead of int for faceted salary search
#

SOLR_LOCATOR : {

  # Name of solr collection
  collection : INDEXED-PDF-DATA

  # ZooKeeper ensemble -- edit this for your cluster's Zk hostname(s)
  zkHost : "localhost:2181/solr"

  # The maximum number of documents to send to Solr per network batch (throughput knob)
  # batchSize : 1000
}

morphlines : [
  {
    # some id
    id : solr-pdf
    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]

    commands : [

     {
        # emit one output record for each attachment in the input
        # record's list of attachments. The result is a list of
        # records, each of which has at most one attachment.
        separateAttachments {}
      }

      {
        # used for auto-detection if MIME type isn't explicitly supplied
        detectMimeType {
          includeDefaultMimeTypes : true
          
          # Symlink...
          mimeTypesFiles : [/home/cloudera/pdf-indexer/custom-mimetypes.xml]
        }
      }
      
      {
        tryRules {
          throwExceptionIfAllRulesFailed : true
          rules : [
            # next rule of tryRules cmd:
            {
              commands : [
                { logDebug { format : "hello unpack" } }
                { unpack {} }
                { generateUUID {} }
                { callParentPipe {} }
              ]
            }

            # next rule of tryRules cmd:
            {
              commands : [
                { logDebug { format : "hello decompress" } }
                { decompress {} }
                { callParentPipe {} }
              ]
            }

            # next rule of tryRules cmd:
            {
              commands : [
                { logDebug { format : "hello solrcell" } }
                {
                  # wrap SolrCell around an Tika parsers
                  solrCell {
                    solrLocator : ${SOLR_LOCATOR}

                    capture : [ content ]

                    # rename "content" field to "text" fields
                    fmap : { content : text, content-type : content_type }

                    lowernames : true

                    # Tika parsers to be registered:
                    parsers : [
			                { parser : org.apache.tika.parser.AutoDetectParser }
                    ]
                  }
                }

                { generateUUID { field : ignored_base_id } }

                {
                  generateSolrSequenceKey {
                    baseIdField: ignored_base_id
                    solrLocator : ${SOLR_LOCATOR}
                  }
                }

              ]
            }
          ]
        }
      }
      
      { sanitizeUnknownSolrFields { solrLocator : ${SOLR_LOCATOR} } }

      # load the record into a Solr server or MapReduce Reducer.
      { loadSolr { solrLocator : ${SOLR_LOCATOR} } }
      { logDebug { format : "output record {}", args : ["@{}"] } }
    ]
  }
]
